#!/usr/bin/env ruby

STDOUT.sync = true

require 'configuration_parser'
require 'deploy_now_api'
require 'size_checker'
require 'remote_host'
require 'php_alias'
require 'date'
require 'configuration_verifier'
require 'colorize'

deploy_now = DeployNowApi.new(endpoint: ENV['SERVICE_HOST'],
                              api_key: ENV['API_KEY'],
                              project_id: ENV['PROJECT_ID'],
                              branch_id: ENV['BRANCH_ID'])
branch_info = deploy_now.get_branch_info
php_enabled = !branch_info[:php_version].nil?
dist_folder = ENV['DIST_FOLDER']
config = ConfigurationParser.parse(dist_folder: dist_folder, bootstrap: !branch_info.include?(:last_deployment_date))
common_excludes = %w[logs .deploy-now .git .github]

if File.symlink?(dist_folder) && !ENV['INPUT_WORKSPACE'].nil?
  workspace = ENV['INPUT_WORKSPACE'].gsub("'", '')
  if File.readlink(dist_folder).start_with?(workspace)
    FileUtils.ln_sf(File.readlink(dist_folder).gsub(workspace, ''), dist_folder)
  end
end

ConfigurationVerifier.verify(config: config, php_enabled: php_enabled)

ssh_user = { username: ENV['SSH_USER'] }
ssh_dir = "#{ENV['HOME']}/.ssh"
FileUtils.mkdir_p(ssh_dir)
ssh_key_file = "#{ssh_dir}/id_ed25519"
File.write(ssh_key_file, ENV['SSH_KEY'])
File.chmod(0500, ssh_key_file)
if ENV['HOME'] != '/root'
  FileUtils.ln_sf(ssh_dir, '/root/.ssh')
end

begin
  remote_host = RemoteHost.new(user: ssh_user, host: branch_info[:ssh_host])

  SizeChecker.check(dist_folder: config.dist_folder,
                    excludes: common_excludes + config.excludes,
                    allowed_size: branch_info[:storage_quota],
                    user: ssh_user,
                    host: branch_info[:ssh_host])

  php_alias = PhpAlias.new(php_version: branch_info[:php_version])

  unless php_alias.disabled
    remote_host.execute(php_alias.create_alias_commands)
    remote_host.execute(php_alias.activate_alias_commands)
  end

  remote_host.execute(config.pre_deployment_remote_commands) unless config.pre_deployment_remote_commands.nil?

  remote_host.deploy(dist_folder: config.dist_folder,
                     excludes: common_excludes + config.excludes)

  remote_host.execute(php_alias.activate_alias_commands) unless php_alias.disabled
  remote_host.execute(config.post_deployment_remote_commands) unless config.post_deployment_remote_commands.nil?

  if php_enabled
    puts 'Configure cron jobs'
    deploy_now.configure_cron_jobs(config.cron_jobs)
  end

  deploy_now.update_deployment_status

  puts "Deployment complete :)".colorize(mode: :bold, color: :green)
  puts "Visit your site at: ".colorize(mode: :bold, color: :green) + branch_info[:app_url]
ensure
  File.delete(ssh_key_file)
end
